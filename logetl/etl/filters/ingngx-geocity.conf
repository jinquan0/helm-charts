    filter{
      grok {
        match => {
          'log' => '%{IPORHOST:host} - %{NOTSPACE:user} \[%{HTTPDATE:time}\] "%{WORD:method} %{URIPATHPARAM:path} HTTP/%{NUMBER:http_version}" %{NUMBER:code} %{NUMBER:size} \"%{DATA:referer}\" \"%{DATA:agent}\" %{NUMBER:request_length} %{BASE16FLOAT:request_time} \[%{DATA:proxy_upstream_name}\] \[%{DATA:proxy_alternative_upstream_name}\] %{DATA:upstream_addr} %{NUMBER:upstream_response_length} %{BASE16FLOAT:upstream_response_time} %{NUMBER:upstream_status} %{DATA:reg_id}'
        }
      }
      ## drop records
      if [host] == "52.82.95.69" or
         [host] == "120.26.64.188" or
         [host] == "124.78.79.130" or
         [host] == "122.224.140.87" or
         [host] == "115.236.1.2" {
         drop { }
      }
      date {
        match => [ "time","dd/MMM/yyyy:HH:mm:ss Z"]
        target => "@timestamp"
      }
      geoip {
          source => "host"
          target => "geoip"
          database => "/usr/share/logstash/geoip/GeoLite2-City.mmdb"
          fields => ["country_name","region_name","city_name","location"]
          add_field => ["[geoip][coordinates]","%{[geoip][longitude]}"]
          add_field => ["[geoip][coordinates]","%{[geoip][latitude]}"]
      }
      ## drop records
      if [city_name] == "Puyang" {
         drop { }
      }
      mutate {
          remove_field => [ "[time]" ]
          remove_field => [ "[log]" ]
          remove_field => [ "[xcxsc-ingngx][log]" ]     ## must modify
      }
    }
